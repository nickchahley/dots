[core]
	editor = nvim
[credintial]
	helper = cache --timeout=3600
[user]
	email = nickchahley@gmail.com
	name = nickchahley
[push]
	default = simple
[color]
	ui = true

[alias]
	gud = status
	s = status --short
	a = add
	au = add --update
	aa = add -A
	ci = commit
	co = checkout
	br = branch
	unstage = restore --staged
	un = restore --staged
	u = restore --staged
	ua = restore --staged .
	d = diff
	df = diff-files
	di = diff-index
	dt = diff-tree
	me = merge --no-ff
	menc = merge --no-commit --no-ff
	meff = merge --ff-only
	last = log -1 HEAD
	l = log 
	lo = log --oneline 
	lp = log --patch   # Show file changes along with log

	# Pretty git logs
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg = !"git lg1"

[merge]
	# Include the summary of merged commits into all newly created merge
	# commits. The newly created merge commit will contain a one-line summary
	# of every (well, most) merged commits.
	log = true

	# Show merge statistics after merge.
	stat = true
	tool = "nvimdiff"
	conflictstyle = diff3

[branch]
	# When creating a new branch off a remote branch, always set it up to
	# track the remote branch so that we can pull from there.
	autoseupmerge = always

[branch "master"]
	# Comment is from not me, but a good explanation
	#
	# This is the list of cmdline options that should be added to git-merge
	# when I merge commits into the master branch.
	#
	# First off, the option --no-commit instructs git not to commit the merge
	# by default. This allows me to do some final adjustment to the commit log
	# message before it gets commited. I often use this to add extra info to
	# the merge message or rewrite my local branch names in the commit message
	# to branch names sensible to the casual reader of the git log.
	#
	# Option --no-ff instructs git to always record a merge commit, even if
	# the branch being merged into can be fast-forwarded. This is often the
	# case when you create a short-lived topic branch which tracks master, do
	# some changes on the topic branch and then merge the changes into the
	# master which remained unchanged while you were doing your work on the
	# topic branch. In this case the master branch can be fast-forwarded (that
	# is the tip of the master branch can be updated to point to the tip of
	# the topic branch) and this is what git does by default. With --no-ff
	# option set git creates a real merge commit which records the fact that
	# another branch was merged. I find this easier to understand and read in
	# the log.
	mergeoptions = --no-ff 

[diff]
	# I don't remember why I'm using the patience algo
	tool = nvimdiff
	algorithm = patience

[init]
	defaultBranch = main
[credential]
	helper = cache
